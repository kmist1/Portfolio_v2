{"ast":null,"code":"var _jsxFileName = \"/Users/krunalmistry/Documents/UNH/Portfolio/v2/src/Components/ThemeProvider.tsx\";\nimport React, { useState } from \"react\";\nexport const ThemeContext = React.createContext({});\nexport const ThemeProvider = ({\n  children\n}) => {\n  const [theme, setTheme] = useState(\"light\");\n\n  const toggleTheme = () => {\n    setTheme(theme === \"light\" ? \"dark\" : \"light\");\n  };\n\n  const color = theme === \"light\" ? \"#333\" : \"#FFF\";\n  const backgroundColor = theme === \"light\" ? \"#FFF\" : \"#333\";\n  document.body.style.color = color;\n  document.body.style.backgroundColor = backgroundColor;\n  return /*#__PURE__*/React.createElement(ThemeContext.Provider, {\n    value: {\n      theme,\n      toggleTheme\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, children);\n};","map":{"version":3,"sources":["/Users/krunalmistry/Documents/UNH/Portfolio/v2/src/Components/ThemeProvider.tsx"],"names":["React","useState","ThemeContext","createContext","ThemeProvider","children","theme","setTheme","toggleTheme","color","backgroundColor","document","body","style"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAKA,OAAO,MAAMC,YAAY,GAAGF,KAAK,CAACG,aAAN,CACxB,EADwB,CAArB;AAIP,OAAO,MAAMC,aAAuB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACrD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAgB,OAAhB,CAAlC;;AACA,QAAMO,WAAW,GAAG,MAAM;AACtBD,IAAAA,QAAQ,CAACD,KAAK,KAAK,OAAV,GAAoB,MAApB,GAA6B,OAA9B,CAAR;AACH,GAFD;;AAIA,QAAMG,KAAK,GAAGH,KAAK,KAAK,OAAV,GAAoB,MAApB,GAA6B,MAA3C;AACA,QAAMI,eAAe,GAAGJ,KAAK,KAAK,OAAV,GAAoB,MAApB,GAA6B,MAArD;AAEAK,EAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBJ,KAApB,GAA4BA,KAA5B;AACAE,EAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBH,eAApB,GAAsCA,eAAtC;AAEA,sBACI,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAAEJ,MAAAA,KAAF;AAASE,MAAAA;AAAT,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,QADL,CADJ;AAKH,CAjBM","sourcesContent":["import React, { useState } from \"react\";\n\ntype ThemeProvider = \"light\" | \"dark\";\ntype ThemeContext = { theme: ThemeProvider; toggleTheme: () => void };\n\nexport const ThemeContext = React.createContext<ThemeContext>(\n    {} as ThemeContext\n);\n\nexport const ThemeProvider: React.FC = ({ children }) => {\n    const [theme, setTheme] = useState<ThemeProvider>(\"light\");\n    const toggleTheme = () => {\n        setTheme(theme === \"light\" ? \"dark\" : \"light\");\n    };\n\n    const color = theme === \"light\" ? \"#333\" : \"#FFF\";\n    const backgroundColor = theme === \"light\" ? \"#FFF\" : \"#333\";\n\n    document.body.style.color = color;\n    document.body.style.backgroundColor = backgroundColor;\n\n    return (\n        <ThemeContext.Provider value={{ theme, toggleTheme }}>\n            {children}\n        </ThemeContext.Provider>\n    );\n};"]},"metadata":{},"sourceType":"module"}